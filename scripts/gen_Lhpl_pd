#!/bin/sh

###############################################################################
##
##                    Illinois Open Source License
##                     University of Illinois/NCSA
##                         Open Source License
##
## Copyright (c) 2004, The University of Illinois at Urbana-Champaign.
## All rights reserved.
##
## Developed by:
##
##              IMPACT Research Group
##
##              University of Illinois at Urbana-Champaign
##
##              http://www.crhc.uiuc.edu/IMPACT
##              http://www.gelato.org
##
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation
## files (the "Software"), to deal with the Software without
## restriction, including without limitation the rights to use, copy,
## modify, merge, publish, distribute, sublicense, and/or sell copies
## of the Software, and to permit persons to whom the Software is
## furnished to do so, subject to the following conditions:
##
## Redistributions of source code must retain the above copyright
## notice, this list of conditions and the following disclaimers.
##
## Redistributions in binary form must reproduce the above copyright
## notice, this list of conditions and the following disclaimers in
## the documentation and/or other materials provided with the
## distribution.
##
## Neither the names of the IMPACT Research Group, the University of
## Illinois, nor the names of its contributors may be used to endorse
## or promote products derived from this Software without specific
## prior written permission.  THE SOFTWARE IS PROVIDED "AS IS",
## WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
## LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
## PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
## CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
## OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
## OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
## OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
##
###############################################################################

###############################################################################
 #
 # Copyright Notices/Identification of Licensor(s) of
 # Original Software in the File
 #
 # Copyright 1990-1999 The Board of Trustees of the University of Illinois
 # Contact: Research and Technology Management Office,
 # University of Illinois at Urbana-Champaign;
 # FAX: 217-244-3716, or email: rtmo@uiuc.edu
 #
 # All rights reserved by the foregoing, respectively.
 #
 # This is licensed software.  The software license agreement with
 # the University of Illinois specifies the terms and conditions
 # for use and redistribution.
 #
###############################################################################

#	Generate machine code for HPL_PD
#
#	Usage: gen_Lhpl_pd "dir" "model" "phase" ["extra args"] < "list"
#
#	Scott A. Mahlke, Wen-mei Hwu

if [ $# -eq 3 ]; then
        PREFIX="$1";
	MODEL="$2";
        PHASE="$3";
        EXTRA_ARGS="";

elif [ $# -eq 4 ]; then
        PREFIX="$1";
	MODEL="$2";
        PHASE="$3";
        EXTRA_ARGS="$4";

else
        echo '> Usage gen_Lhpl_pd "dir" "model" "phase" ["extra_args"] < "list" ';
        echo '>';
        echo '> "dir" is location of input files';
        echo '> "model" is target processor model (ie V1-HP)'
        echo '> "phase" is code generation phase (ie. 1,2,3,4,6,or 7(0) )';
        echo '> "phase" may also be O_tr, S_tr, HS_tr (phase 1 code with that ext)';
        echo '> "extra_args" are optional additional -P and -F arguments to pass';
        echo ">              Lhpl_pd (Put quote around args, ie '-Fparm1=2 -Fparm2=3')";
        echo '> "list" is list of Lcode file to process';
        exit 0200;
fi;

# Added O_tr, S_tr, HS_tr "phase" options -JCG 4/99
if [ "$PHASE" = "O_tr" ]; then
    echo "> Performing Lcode to Trimaran bridge Code (O_tr)";
    SUFFIX="O_tr";
    PHASE="1";
elif [ "$PHASE" = "S_tr" ]; then
    echo "> Performing Lcode to Trimaran bridge Code (S_tr)";
    SUFFIX="S_tr";
    PHASE="1";
elif [ "$PHASE" = "HS_tr" ]; then
    echo "> Performing Lcode to Trimaran bridge Code (HS_tr)";
    SUFFIX="HS_tr";
    PHASE="1";
elif [ $PHASE -eq 0 ]; then
    echo "> Performing Lcode to Assembly Code Conversion";
    SUFFIX="pl";
    PHASE="7";
elif [ $PHASE -eq 1 ]; then
    echo "> Performing Lcode to Mcode Conversion";
    SUFFIX="mc";
elif [ $PHASE -eq 2 ]; then
    echo "> Performing Mcode to Optimized Mcode Conversion";
    SUFFIX="mco";
elif [ $PHASE -eq 3 ]; then
    echo "> Performing Lcode to Optimized Mcode Conversion";
    SUFFIX="mco";
elif [ $PHASE -eq 4 ]; then
    echo "> Performing Optimized Mcode to Assembly Code Conversion";
    SUFFIX="pl";
elif [ $PHASE -eq 6 ]; then
    echo "> Performing Mcode to Assembly Code Conversion";
    SUFFIX="pl";
elif [ $PHASE -eq 7 ]; then
    echo "> Performing Lcode to Assembly Code Conversion";
    SUFFIX="pl";
else
    echo "> Invalid Code Generation Phase: ( Try 1,2,3,4,6,or 7(0) )";
    exit 0200;
fi;

echo "> Prefixing files with ${PREFIX}/";
echo "> Compiling for : arch = hpl_pd / model = ${MODEL}";
echo "> Extra Lhpl_pd arguments : ${EXTRA_ARGS}";

\rm -rf IMPACT_001

while read FILE;
do
	echo "> processing $PREFIX/$FILE"
#	FILEOUT=`echo $FILE | awk -F. '{print $1}'`
	FILEOUT=`echo $FILE | \
	awk -F. '{if ($(NF) == "p") NF=NF-1; ORS="."; for (i=1; i<NF-1; i++) print $i; ORS=""; print $(NF-1)}'`
	Lhpl_pd \
		-Farch=HPL-PD \
		-Fmodel=${MODEL} \
		-Fphase=${PHASE} \
		${EXTRA_ARGS} \
		-i ${PREFIX}/${FILE} \
		-o ${PREFIX}/${FILEOUT}.${SUFFIX}

	ERROR=$?;
	if [ $ERROR -ne 0 ]; then
	    echo "> Lhpl_pd failed on input file: ${FILE}";
	    echo "> error_code= ${ERROR}";
	    exit 0200;
	fi;
done;

echo "> done";
