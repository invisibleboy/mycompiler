#!/bin/sh -f

###############################################################################
##
##                    Illinois Open Source License
##                     University of Illinois/NCSA
##                         Open Source License
##
## Copyright (c) 2004, The University of Illinois at Urbana-Champaign.
## All rights reserved.
##
## Developed by:
##
##              IMPACT Research Group
##
##              University of Illinois at Urbana-Champaign
##
##              http://www.crhc.uiuc.edu/IMPACT
##              http://www.gelato.org
##
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation
## files (the "Software"), to deal with the Software without
## restriction, including without limitation the rights to use, copy,
## modify, merge, publish, distribute, sublicense, and/or sell copies
## of the Software, and to permit persons to whom the Software is
## furnished to do so, subject to the following conditions:
##
## Redistributions of source code must retain the above copyright
## notice, this list of conditions and the following disclaimers.
##
## Redistributions in binary form must reproduce the above copyright
## notice, this list of conditions and the following disclaimers in
## the documentation and/or other materials provided with the
## distribution.
##
## Neither the names of the IMPACT Research Group, the University of
## Illinois, nor the names of its contributors may be used to endorse
## or promote products derived from this Software without specific
## prior written permission.  THE SOFTWARE IS PROVIDED "AS IS",
## WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
## LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
## PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
## CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
## OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
## OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
## OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
##
###############################################################################


#
# Submits a simulation request to HP Task Broker (ImpactSim)
# 
# Note: Task Broker is available on the HP Workstations.

#       Simulates a benchmark with the benchmark's "standard" input
#	using the ISCA settings
#
#  	usage: Lsim_bench "benchmark" "issue" "branches" ["dir" ["Lsim_args"]]
#
#       Required arguments:
#
#       benchmark is benchmark name ie wc, 008.espresso
#       issue is issue width
#       branches is number of branches
#
#       Optional arguments:
#
#       dir the directory the files are in, defaults '.'
#	Lsim_args are args that are passed to Lsim.
#

ARCH=`host_arch`
BATCH_NAME="Lsim_bench"

if [ ${ARCH} != "hppa" ]; then
	echo '> Task Broker available only for HP Workstations';
fi

if [ $# -eq 3 ]; then
	BENCHMARK="$1";
	ISSUE="$2";
	BRANCHES="$3";
	DIR=".";
	SIM_ARGS="";

elif [ $# -eq 4 ]; then
	BENCHMARK="$1";
	ISSUE="$2";
	BRANCHES="$3";
	DIR="$4";
	SIM_ARGS="";

elif [ $# -eq 5 ]; then
	BENCHMARK="$1";
	ISSUE="$2";
	BRANCHES="$3";
	DIR="$4";
	SIM_ARGS="$5";
else

	echo '> Usage: Lsim_bench "benchmark" "issue" "branches" ';
	echo '                    ["dir" ["Lsim_args"]]';
	echo '> ';
	echo '> "benchmark" is benchmark name (ie wc, 008.espresso)';
	echo '> "branches" is branches/cycle (1, 2, 4, 8)';
	echo '> "issue" is issue width (1, 2, 4, 8)';
        echo '> "dir" is file directory, defaults to "."';
	echo '> "Lsim_args are additional (-P and -F) arguments to pass to Lsim'
	echo ">            (Put quote around Lsim_args ie '-Fbla=2 -Fhuh=3') "

	exit 0200;
fi

RESULT_FILE="result.out"
INFO_SCRIPT="${IMPACT_REL_PATH}/scripts/print_trace_info_new"

#
# Get benchmark arguments, prefix, and check commands
#
SETUP=`${INFO_SCRIPT} SETUP ${BENCHMARK}`
PREFIX=`${INFO_SCRIPT} PREFIX ${BENCHMARK}`
ARGS=`${INFO_SCRIPT} ARGS ${BENCHMARK}`
CHECK=`${INFO_SCRIPT} CHECK ${BENCHMARK} ${RESULT_FILE}`
CLEANUP=`${INFO_SCRIPT} CLEANUP ${BENCHMARK}`
SKIP=`${INFO_SCRIPT} SKIP ${BENCHMARK}`

# Make sure worked (test only last command since all same batch file)
# Need to test SKIP because it may not know how much to skip
if test "$?" != 0; then echo "ERROR in ${INFO_SCRIPT}:\n$SKIP"; exit 1;fi

#MAKE SURE DIRECTORY EXISTS
if [ ! -d $DIR ] ; then
	echo "> $BATCH_NAME, directory doesn't exits: $DIR";
	exit 0220;
fi

SIMULATOR="Lsim"

LSIM_ARGS="-p ${IMPACT_REL_PATH}/parms/STD_PARMS \
	-Pbase=./${BENCHMARK} \
	-Puse_file_mode=no \
	'-Pexec_args=${ARGS}' \
	'-Pcommand_prefix=${PREFIX}' \
	-Presult_file=result.out \
	-PBTB_model=counter \
	-Pread_dests_of_pred_op=yes \
	-Picache_model=split-block \
	-Pdcache_model=blocking \
	-Pissue_width=${ISSUE} \
	-Pbranches=${BRANCHES} \
	-Psample=200000 \
	-Pskip=${SKIP} \
	-Pstats_ext=sim \
	-Pprint_sample_stats=yes ${SIM_ARGS} "

export BENCHMARK
export BATCH_NAME
export DIR
export SETUP
export ARGS
export SIMULATOR 
export LSIM_ARGS
export CHECK
export CLEANUP
export SKIP

rm -rf ${DIR}/tbsim.out

tsub -b -s ImpactSim -o ${DIR}/tbsim.out -e ${DIR}/tbsim.out /dev/null
