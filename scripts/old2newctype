#!/bin/sh
###############################################################################
##
##                    Illinois Open Source License
##                     University of Illinois/NCSA
##                         Open Source License
##
## Copyright (c) 2004, The University of Illinois at Urbana-Champaign.
## All rights reserved.
##
## Developed by:
##
##              IMPACT Research Group
##
##              University of Illinois at Urbana-Champaign
##
##              http://www.crhc.uiuc.edu/IMPACT
##              http://www.gelato.org
##
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation
## files (the "Software"), to deal with the Software without
## restriction, including without limitation the rights to use, copy,
## modify, merge, publish, distribute, sublicense, and/or sell copies
## of the Software, and to permit persons to whom the Software is
## furnished to do so, subject to the following conditions:
##
## Redistributions of source code must retain the above copyright
## notice, this list of conditions and the following disclaimers.
##
## Redistributions in binary form must reproduce the above copyright
## notice, this list of conditions and the following disclaimers in
## the documentation and/or other materials provided with the
## distribution.
##
## Neither the names of the IMPACT Research Group, the University of
## Illinois, nor the names of its contributors may be used to endorse
## or promote products derived from this Software without specific
## prior written permission.  THE SOFTWARE IS PROVIDED "AS IS",
## WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
## LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
## PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
## CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
## OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
## OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
## OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
##
###############################################################################

#
#	Converts old ctype format lcode to new ctype format in place.
#
#	Run this script with no arguments for usage informantion
#
#	Script adapted by Jaymie Braun 3/97 from JCG's 'ascii2binary'
#

VALID_ARCH=0;

if [ $# -gt 0 ]; then
  # Set correct direction of transfer
  ARCH="$1"
  shift;

  case $ARCH in
    hppa)
      ARCH_PARMS="${IMPACT_REL_PATH}/parms/PROBE_HPPA";
      VALID_ARCH=1;;

    sparc)
      ARCH_PARMS="${IMPACT_REL_PATH}/parms/PROBE_SPARC";
      VALID_ARCH=1;;

    x86)
      ARCH_PARMS="${IMPACT_REL_PATH}/parms/PROBE_X86";
      VALID_ARCH=1;;

    *)
      echo " ";
      echo "old2newctype error:"
      echo "   Invalid architecture '$ARCH'!"
      echo "   Expect either hppa, sparc, or x86!";
      echo " ";
      VALID_ARCH=0;;
  esac
fi

if [ $# -lt 1 -o $VALID_ARCH -eq 0 ]; then
	echo "Usage: old2newctype arch file1 [file2 ...]";
	echo " "
	echo "       Converts lcode from obsolete to new lcode format"
	echo "       where arch is hppa, sparc, or x86."
	echo " "
	echo "       **PLEASE NOTE: operand information is lost in the"
	echo "            translation from obsolete to new lcode.  Direct"
	echo "            comparision of files will not produce clean diff."
	echo " "
	exit 1;
fi 


# Convert each file specified
while [ $# -gt 0 ]
do
    # get the next file to be processed 
    FILE="$1";
    shift;

    # Do not process empty files
    if [ ! -s $FILE ]; then
        echo "> Skipping ${FILE}, empty file.";
        continue;
    fi

    # Convert to obsolete fromat
    echo "> Translating $FILE to new lcode format"
    Lcode -p ${ARCH_PARMS} \
     -Foutput_obsolete_ctype_format=no -Fecho=yes \
     -i ${FILE} -o newformat.temp

    # Stop on errors before overwritting source!
    if test "$?" != 0; then 
	echo "Exiting: Error reading lcode file '${FILE}'"; 

	# Remove the temp file
	/bin/rm -f newformat.temp

	exit 1;
    fi

    # Copy the temp file to the original file's name (to preserve permissions)
    cp newformat.temp ${FILE}
    if test "$?" != 0; then 
	echo "Error:  Unable to copy newformat.temp to '${FILE}'.  Terminating!"; 
	# Remove the temp file
	/bin/rm -f newformat.temp

	exit 1;
    fi
	
done;

# Remove the temp file
/bin/rm -f newformat.temp

echo "> Done"

